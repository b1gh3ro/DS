#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>  // for wait()
#include <stdlib.h>

int main() {
    pid_t pid;

    pid = fork();  // create child process

    if (pid < 0) {
        // Fork failed
        perror("Fork failed");
        return 1;
    } else if (pid == 0) {
        // Child process
        printf("Child process is running...\n");
        sleep(2);  // simulate some work
        printf("Child process completed.\n");
        exit(0);   // child exits
    } else {
        // Parent process
        printf("Parent is waiting for child to complete...\n");
        wait(NULL);  // parent waits for any child process to complete
        printf("Parent process: Child has completed.\n");
    }

    return 0;
}
