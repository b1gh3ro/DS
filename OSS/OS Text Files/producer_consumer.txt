#include <stdio.h>
#include <pthread.h>
#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>
#include <semaphore.h>

sem_t empty, full, mutex;
char buf[10];

void producer(void *arg) {
    int i;
    //printf("inside producer\n");
    for (i = 0; i < 10; i++) {
        sem_wait(&empty);
        sem_wait(&mutex);
        buf[i] = i;
        printf("item produced is %d\n", buf[i]);
        sem_post(&mutex);
        sem_post(&full);
        sleep(1);
    }
    pthread_exit("producer\n");
}

void consumer(void *arg) {
    int j;
    //printf("inside consumer\n");
    for (j = 0; j < 10; j++) {
        sem_wait(&full);
        sem_wait(&mutex);
        j = buf[j];
        printf("consumed item is: %d\n", buf[j]);
        sem_post(&mutex);
        sem_post(&empty);
        sleep(5);
    }
    pthread_exit("consumer\n");
}

int main() {
    pthread_t pid1, pid2;
    sem_init(&empty, 0, 10);
    sem_init(&full, 0, 0);
    sem_init(&mutex, 0, 1);

    void *status;
    pthread_create(&pid1, NULL, producer, NULL);
    pthread_create(&pid2, NULL, consumer, NULL);
    pthread_join(pid1, &status);
    printf("the exited status of 1st is %s\n", (char*)status);
    pthread_join(pid2, &status);
    printf("the exited status %s\n", (char*)status);
    return 0;
}

Output:

item produced is 0
consumed item is: 0
item produced is 1
item produced is 2
item produced is 3
item produced is 4
consumed item is: 1
item produced is 5
item produced is 6
item produced is 7
item produced is 8
item produced is 9
consumed item is: 2
the exited status of 1st is producer

consumed item is: 3
consumed item is: 4
consumed item is: 5
consumed item is: 6
consumed item is: 7
consumed item is: 8
consumed item is: 9
the exited status consumer
