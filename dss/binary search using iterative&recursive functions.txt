#include <stdio.h>

// Function for binary search using iteration
int binarySearchIterative(int arr[], int size, int target) {
    int low = 0;
    int high = size - 1;

    while (low <= high) {
        int mid = low + (high - low) / 2;

        if (arr[mid] == target) {
            return mid; // Element found, return its index
        } else if (arr[mid] < target) {
            low = mid + 1; // Discard left half
        } else {
            high = mid - 1; // Discard right half
        }
    }

    return -1; // Element not found
}

// Function for binary search using recursion
int binarySearchRecursive(int arr[], int low, int high, int target) {
    if (low <= high) {
        int mid = low + (high - low) / 2;

        if (arr[mid] == target) {
            return mid; // Element found, return its index
        } else if (arr[mid] < target) {
            return binarySearchRecursive(arr, mid + 1, high, target); // Search right half
        } else {
            return binarySearchRecursive(arr, low, mid - 1, target); // Search left half
        }
    }

    return -1; // Element not found
}

int main() {
    int arr[] = {2, 4, 7, 10, 14, 20, 25, 30};
    int size = sizeof(arr) / sizeof(arr[0]);

    int target;
    printf("Enter the element to search: ");
    scanf("%d", &target);

    // Binary search using iteration
    int resultIterative = binarySearchIterative(arr, size, target);
    if (resultIterative != -1) {
        printf("Element %d found at index (iterative): %d\n", target, resultIterative);
    } else {
        printf("Element %d not found (iterative)\n", target);
    }

    // Binary search using recursion
    int resultRecursive = binarySearchRecursive(arr, 0, size - 1, target);
    if (resultRecursive != -1) {
        printf("Element %d found at index (recursive): %d\n", target, resultRecursive);
    } else {
        printf("Element %d not found (recursive)\n", target);
    }

    return 0;
}
