4 A)Stack using linked list
#include<stdio.h>
#include<stdlib.h>
struct Node {
int data;
struct Node *next;
};
struct Node *top=NULL;
void push(int x);
void pop();
void peek();
void display();
int main(){
int choice;
int x;//This variable is created for Enqueue operation
while(1){
printf("The operations can be performed on stack are:\n");
printf("1.push\n2.pop\n3.peek\n4.display\n5.End\n");
printf("Enter the choice: ");
scanf("%d",&choice);
switch(choice){
case 1:
printf("Enter the element to be pushed into the stack:");
scanf("%d",&x);
36
push(x);
break;
case 2:
pop();
break;
case 3:
peek();
break;
case 4:
display();
break;
case 5:
printf("Program has been ended\n");
exit(0);
default: printf("Enter a valid choice!\n");
}
}
}
void push(int x){
struct Node *ptr=(struct Node*)malloc(sizeof(struct Node));
ptr->data=x;
ptr->next=top;
top=ptr;
}
void display(){
struct Node *ptr=top;
while(ptr!=NULL){
printf("%d\n",ptr->data);
37
ptr=ptr->next;
}
}
void peek(){
if(top==NULL){
printf("stack is empty\n");
}
else{
printf("top element: %d",top->data);
}
}
void pop(){
struct Node *temp;
temp=top;
if(top==NULL){
printf("stack is empty\n");
}
else{
printf("popped element is: %d\n",top->data);
top=top->next;
free(temp);
}
}