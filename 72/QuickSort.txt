#include <stdio.h>

int partition(int arr[], int low, int high) {
int pivot = arr[low];
int i = low + 1;
int j = high;
while (1) {
while (i <= j && arr[i] <= pivot)
i++;
while (j >= i && arr[j] > pivot)
j--;
if (i <= j) {
int temp = arr[i];
arr[i] = arr[j];
arr[j] = temp;
} 
else 
{
int temp = arr[low];
arr[low] = arr[j];
arr[j] = temp;
return j; 
}
}
}
114
void quicksort(int arr[], int low, int high) {
if (low < high) {

int pivotIndex = partition(arr, low, high);
quicksort(arr, low, pivotIndex - 1);
quicksort(arr, pivotIndex + 1, high);
}
}
int main() {
int myArray[] = {3, 6, 8, 10, 1, 2, 1};
int n = sizeof(myArray) / sizeof(myArray[0]);

quicksort(myArray, 0, n - 1);
printf("Sorted array: ");
for (int i = 0; i < n; i++) {
printf("%d ", myArray[i]);
}
return 0;
}