Queue using linked list
#include<stdio.h>
#include<stdlib.h>
struct Node {
int data;
struct Node *next;
};
struct Node *front=NULL;
struct Node *rear=NULL;
void Enqueue(int x);
void Dequeue();
void peek();
void display();
int main(){
int choice;
int x;
while(1){
printf("The operations can be performed on Queue are:\n");
printf("1.Enqueue\n2.Dequeue\n3.peek\n4.display\n5.End\n");
printf("Enter the choice: ");
scanf("%d",&choice);
switch(choice){
case 1:
printf("Enter the element to be pushed into the Queue:");
scanf("%d",&x);
45
Enqueue(x);
break;
case 2:
Dequeue();
break;
case 3:
peek();
break;
case 4:
display();
break;
case 5:
printf("Program has been ended\n");
exit(0);
default: printf("Enter a valid choice!\n");
}
}
}
void Enqueue(int x){
struct Node *ptr=(struct Node*)malloc(sizeof(struct Node));
ptr->data=x;
ptr->next=NULL;
if(front==NULL&&rear==NULL){
front=ptr;
rear=ptr;
}
else{
rear->next=ptr;
rear=ptr;
 }
 } 
void display()
{ 
if(front==NULL&&rear==NULL)
{ 
printf("Queue is empty\n");
 }
else
{ 
struct Node *ptr=front;
 while(ptr!=NULL)
{ printf("%d\n",ptr->data);
 ptr=ptr->next; }
} 
}
void peek()
{ 
if(front==NULL&&rear==NULL)
{ 
printf("Queue is empty\n"); 
}
else
{ 
printf(" %d",front->data); 
} 
}
void Dequeue(){ 
struct Node *ptr; ptr=front;
 if(front==NULL&&rear==NULL)
{
printf("Queue is empty\n");
}
else{
printf("popped element is: %d\n",front->data);
front=front->next;
free(ptr);
}
}
